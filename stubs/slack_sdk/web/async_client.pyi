"""Type stubs for slack_sdk.web.async_client."""

from typing import Any, Iterator

class AsyncSlackResponse:
    """Response from Slack async API calls - dict-like."""

    data: dict[str, Any]

    # Make it dict-compatible
    def __getitem__(self, key: str) -> Any: ...
    def __setitem__(self, key: str, value: Any) -> None: ...
    def __delitem__(self, key: str) -> None: ...
    def __contains__(self, key: object) -> bool: ...
    def __iter__(self) -> Iterator[str]: ...
    def __len__(self) -> int: ...

    # Dict methods
    def get(self, key: str, default: Any = None) -> Any: ...
    def keys(self) -> list[str]: ...
    def values(self) -> list[Any]: ...
    def items(self) -> list[tuple[str, Any]]: ...

class AsyncWebClient:
    """Async Slack Web API client."""

    def __init__(self, token: str, **kwargs: Any) -> None: ...
    async def chat_postMessage(self, **kwargs: Any) -> AsyncSlackResponse: ...
    async def views_open(self, **kwargs: Any) -> AsyncSlackResponse: ...
    async def files_remote_add(self, **kwargs: Any) -> AsyncSlackResponse: ...
    async def users_list(self, **kwargs: Any) -> AsyncSlackResponse: ...
